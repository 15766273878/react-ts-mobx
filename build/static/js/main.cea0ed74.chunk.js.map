{"version":3,"sources":["page/appList/index.module.less","utils/util.ts","page/appList/component/CreateForm/index.tsx","page/appList/index.tsx","page/setting/index.tsx","layout/SecurityLayout.tsx","page/appDetail/index.tsx","layout/Layout.tsx","App.tsx","serviceWorker.tsx","index.tsx"],"names":["module","exports","isRight","value","toString","replace","Array","length","CreateForm","visible","initVal","onCreate","onCancel","Form","useForm","form","useEffect","setFieldsValue","maskClosable","title","okText","cancelText","onOk","validateFields","then","values","resetFields","catch","info","console","log","name","labelCol","span","Item","label","rules","required","message","validator","rule","Promise","resolve","reject","maxLength","placeholder","App","useState","loading","setLoading","setVisible","apps","setApps","setDetail","setInitVal","modify","item","person","admin","setTimeout","id","icon","className","styles","list","onClick","PlusOutlined","spinning","size","map","index","key","src","alt","shape","window","location","href","SettingFilled","DragOutlined","state","React","Component","SecurityLayout","current","menus","path","pathname","pathToRegexp","exec","this","setState","selectedKeys","mode","e","to","exact","component","AppList","Setting","useParams","type","Layout","appDetail","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.cea0ed74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"index_list__11Vfk\"};","import qs from 'querystring'\r\nimport loaDebounce from 'lodash/debounce'\r\nimport { pathToRegexp } from 'path-to-regexp'\r\nexport const isDev = () => {\r\n  const { NODE_ENV } = process.env\r\n\r\n  if (NODE_ENV === 'development') {\r\n    return true\r\n  }\r\n\r\n  return false\r\n}\r\nexport const getPageQuery = () => qs.parse(window.location.href.split('?')[1])\r\n/**\r\n * props.route.routes\r\n * @param router [{}]\r\n * @param pathname string\r\n */\r\n\r\nexport const getAuthorityFromRouter = (router = [], pathname: string) => {\r\n  const authority = router.find(({ path }) => path && pathToRegexp(path).exec(pathname))\r\n  if (authority) return authority\r\n  return undefined\r\n}\r\n\r\nexport function isRight(value: any) {\r\n  if (typeof value === 'undefined') {\r\n    return false\r\n  } else if (typeof value === 'number') {\r\n    return value.toString()\r\n  } else if (typeof value === 'string') {\r\n    return value.replace(/ /g, '').replace(/\\n/g, '')\r\n  } else if (value instanceof Array) {\r\n    return value.length\r\n  } else {\r\n    return value\r\n  }\r\n}\r\n\r\nexport const sleep = (time = 0) => new Promise((resolve) => setTimeout(resolve, time))\r\n\r\nexport const debounce = (fn: Function, time = 500) => loaDebounce(fn, time)\r\n\r\nexport const deep = (obj: object) => {\r\n  try {\r\n    return JSON.parse(JSON.stringify(obj))\r\n  } catch (e) {\r\n    console.log(e)\r\n    return obj\r\n  }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Modal, Form, Input } from 'antd'\r\nimport { isRight } from '@/utils/util'\r\n\r\ninterface Values {\r\n  title: string\r\n  description: string\r\n  modifier: string\r\n}\r\n\r\ninterface initValue {\r\n  name: string\r\n  person: string\r\n  admin: string\r\n}\r\n\r\ninterface Props {\r\n  visible: boolean\r\n  initVal: initValue\r\n  onCreate: (values: Values) => void\r\n  onCancel: () => void\r\n}\r\n\r\nconst CreateForm: React.FC<Props> = ({ visible, initVal, onCreate, onCancel }) => {\r\n  const [form] = Form.useForm()\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue(initVal)\r\n  }, [initVal])\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      maskClosable={false}\r\n      title=\"创建报表应用\"\r\n      okText=\"确定\"\r\n      cancelText=\"取消\"\r\n      onCancel={onCancel}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then((values: any) => {\r\n            form.resetFields()\r\n            onCreate(values)\r\n          })\r\n          .catch((info) => {\r\n            console.log('Validate Failed:', info)\r\n          })\r\n      }}\r\n    >\r\n      <Form form={form} name=\"form_in_modal\" labelCol={{ span: 5 }}>\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"应用名称\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入应用名称',\r\n              validator: (rule, value) => {\r\n                return isRight(value) ? Promise.resolve() : Promise.reject(rule.message)\r\n              }\r\n            }\r\n          ]}\r\n        >\r\n          <Input maxLength={10} placeholder=\"输入应用名称\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"person\"\r\n          label=\"创建人\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请选择创建人',\r\n              validator: (rule, value) => {\r\n                return isRight(value) ? Promise.resolve() : Promise.reject(value)\r\n              }\r\n            }\r\n          ]}\r\n        >\r\n          <Input placeholder=\"输入创建人\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"admin\"\r\n          label=\"管理员\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请选择管理员',\r\n              validator: (rule, value) => {\r\n                return isRight(value) ? Promise.resolve() : Promise.reject(value)\r\n              }\r\n            }\r\n          ]}\r\n        >\r\n          <Input placeholder=\"请选择管理员\" />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CreateForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Spin, Modal } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { PlusOutlined, SettingFilled, DragOutlined } from '@ant-design/icons'\r\nimport styles from './index.module.less'\r\n\r\nimport CreateForm from './component/CreateForm'\r\n\r\nfunction App() {\r\n  let formRef = null\r\n\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n  const [visible, setVisible] = useState<boolean>(false)\r\n  const [apps, setApps] = useState<object[]>([])\r\n  const [detail, setDetail] = useState<object>({})\r\n  const [initVal, setInitVal] = useState<any>({})\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    setTimeout(() => {\r\n      setApps([\r\n        {\r\n          id: '12',\r\n          name: '资产管理',\r\n          person: '邓桂红',\r\n          admin: '超级高',\r\n          icon:\r\n            'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1585042054996&di=e4003d64b36b27a08b7382c1e6b03f4b&imgtype=0&src=http%3A%2F%2Fa4.att.hudong.com%2F21%2F09%2F01200000026352136359091694357.jpg'\r\n        },\r\n        {\r\n          id: '36',\r\n          name: 'gw3管理',\r\n          person: '邓32',\r\n          admin: '532',\r\n          icon:\r\n            'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1585042054996&di=e4003d64b36b27a08b7382c1e6b03f4b&imgtype=0&src=http%3A%2F%2Fa4.att.hudong.com%2F21%2F09%2F01200000026352136359091694357.jpg'\r\n        }\r\n      ])\r\n      setLoading(false)\r\n    }, 1000)\r\n  }, [])\r\n\r\n  function modify(item: any) {\r\n    setDetail(item)\r\n    setInitVal({\r\n      name: item.name || '',\r\n      person: item.person || '',\r\n      admin: item.admin || ''\r\n    })\r\n    setVisible(true)\r\n  }\r\n\r\n  function confirmSave(value: any) {\r\n    console.log(value)\r\n    setVisible(false)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.list}>\r\n      <div\r\n        className=\"item add\"\r\n        onClick={() => {\r\n          modify({})\r\n        }}\r\n      >\r\n        <div className=\"content\">\r\n          <PlusOutlined className=\"icon\" />\r\n          <span className=\"name\">创建报表应用</span>\r\n        </div>\r\n      </div>\r\n      <Spin spinning={loading} size=\"large\">\r\n        {apps.map((item: any, index: number) => (\r\n          <div className=\"item\" key={index}>\r\n            <div className=\"content\">\r\n              <img className=\"icon\" src={item.icon} alt=\"\" />\r\n              <span className=\"name\">{item.name}</span>\r\n            </div>\r\n            <div className=\"foot\">\r\n              <div className=\"left\">\r\n                <Button\r\n                  shape=\"round\"\r\n                  onClick={() => {\r\n                    window.location.href = `/appDetail?id=${item.id}`\r\n                  }}\r\n                >\r\n                  管理应用\r\n                </Button>\r\n              </div>\r\n              <div className=\"right\">\r\n                <SettingFilled\r\n                  onClick={() => {\r\n                    modify(item)\r\n                  }}\r\n                />\r\n                <DragOutlined className=\"drag\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </Spin>\r\n      <CreateForm\r\n        visible={visible}\r\n        initVal={initVal}\r\n        onCreate={confirmSave}\r\n        onCancel={() => {\r\n          setVisible(false)\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nclass App extends React.Component {\r\n  public readonly state = {}\r\n  public render() {\r\n    return <div>setting</div>\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport { BrowserRouter, Switch, Route, Redirect, Link } from 'react-router-dom'\r\n\r\nimport { Menu } from 'antd'\r\nimport AppList from '@/page/appList'\r\nimport Setting from '@/page/setting'\r\nimport { pathToRegexp } from 'path-to-regexp'\r\n\r\nimport './SecurityLayout.less'\r\n\r\nclass SecurityLayout extends React.Component {\r\n  public readonly state = {\r\n    current: '',\r\n    menus: [\r\n      {\r\n        path: '/main/appList',\r\n        name: '应用中心',\r\n        key: 'appList'\r\n      },\r\n      {\r\n        path: '/main/setting',\r\n        name: '配置中心',\r\n        key: 'setting'\r\n      }\r\n    ]\r\n  }\r\n\r\n  public componentDidMount() {\r\n    const pathname = window.location.pathname\r\n    const value = pathToRegexp(pathname).exec('/main/setting') ? 'setting' : 'appList'\r\n\r\n    this.setState({\r\n      current: value\r\n    })\r\n  }\r\n\r\n  public render() {\r\n    const { current, menus } = this.state\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"tab\">\r\n          <Menu selectedKeys={[current]} mode=\"horizontal\">\r\n            {menus.map((item) => (\r\n              <Menu.Item\r\n                className=\"tab-item\"\r\n                key={item.key}\r\n                onClick={(e) => {\r\n                  this.setState({\r\n                    current: e.key\r\n                  })\r\n                }}\r\n              >\r\n                <Link to={item.path}>{item.name}</Link>\r\n              </Menu.Item>\r\n            ))}\r\n          </Menu>\r\n        </div>\r\n        <Switch>\r\n          <Route exact path=\"/main\" component={() => <Redirect to=\"/main/appList\" />} />\r\n          <Route path=\"/main/appList\" component={AppList} />\r\n          <Route path=\"/main/setting\" component={Setting} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SecurityLayout\r\n","import React from 'react'\r\nimport { Button } from 'antd'\r\nimport { useHistory, useParams, useLocation } from 'react-router-dom'\r\nfunction App() {\r\n  console.log(useParams())\r\n  return (\r\n    <div className=\"main\">\r\n      <Button type=\"primary\">按钮</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React, { Suspense } from 'react'\r\nimport { BrowserRouter, Switch, Route, Redirect, Link } from 'react-router-dom'\r\n\r\nimport SecurityLayout from '@/layout/SecurityLayout'\r\n\r\nimport appDetail from '@/page/appDetail'\r\n\r\nclass Layout extends React.Component {\r\n  public readonly state = {}\r\n\r\n  public render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={() => <Redirect to=\"/main\" />} />\r\n          <Route path=\"/main\" component={SecurityLayout} />\r\n          <Route path=\"/appDetail\" component={appDetail} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Layout from \"@/layout/Layout\";\nfunction App() {\n  return <div className=\"App\">\n    <Layout />\n  </div>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config:any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl:any, config:any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl:any, config:any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// This must be the first line in src/index.js\nimport 'react-app-polyfill/ie9'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}